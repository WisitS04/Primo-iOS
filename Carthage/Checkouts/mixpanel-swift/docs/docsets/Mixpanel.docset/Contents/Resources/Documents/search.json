{"Structs/AnyTweak.html#/s:s8HashableP9hashValueSiv":{"name":"hashValue","parent_name":"AnyTweak"},"Structs/AnyTweak.html#/s:8Mixpanel8AnyTweakV12tweakClusterSayACGv":{"name":"tweakCluster","abstract":"<p>Allows easy tweak initialization by clustering tweaks together for A/B Testing</p>","parent_name":"AnyTweak"},"Structs/Tweak.html#/s:8Mixpanel5TweakVACyxGSS9tweakName_x12defaultValueS2Stcfc":{"name":"init(tweakName:defaultValue:_:_:)","abstract":"<p>Initializer for a Tweak for A/B Testing</p>","parent_name":"Tweak"},"Structs/Tweak.html#/s:8Mixpanel5TweakVA2A13TweakableTypeRzs10ComparableRzs13SignedNumericRzlEACyxGSS9tweakName_x12defaultValuexSg3minAJ3maxAJ8stepSizeS2Stcfc":{"name":"init(tweakName:defaultValue:min:max:stepSize:_:_:)","abstract":"<p>Creates a Tweak<T> where T: SignedNumberType","parent_name":"Tweak"},"Structs/Tweak.html#/s:8Mixpanel5TweakV9hashValueSiv":{"name":"hashValue","abstract":"<p>Hashing for a Tweak for A/B Testing in order for it to be stored.</p>","parent_name":"Tweak"},"Structs/Tweak.html#/s:8Mixpanel16TweakClusterTypeP05tweakC0SayAA03AnyB0VGv":{"name":"tweakCluster","parent_name":"Tweak"},"Structs/MixpanelTweaks.html#/s:8Mixpanel0A6TweaksV12defaultStoreAA05TweakD0CvZ":{"name":"defaultStore","abstract":"<p>The default store that holds the Tweaks</p>","parent_name":"MixpanelTweaks"},"Structs/MixpanelTweaks.html#/s:8Mixpanel0A6TweaksV03setB0ySayAA16TweakClusterType_pG6tweaks_tFZ":{"name":"setTweaks(tweaks:)","abstract":"<p>setTweaks needs to be called to add the defined Tweaks into the environment.</p>","parent_name":"MixpanelTweaks"},"Structs/MixpanelTweaks.html":{"name":"MixpanelTweaks","abstract":"<p>The MixpanelTweaks struct that needs to be extended to define new Tweaks for A/B testing</p>"},"Structs/Tweak.html":{"name":"Tweak","abstract":"<p>Tweaks let you adjust things on the fly."},"Structs/AnyTweak.html":{"name":"AnyTweak","abstract":"<p>A type-erasure around Tweak<T> for A/B Testing.</p>"},"Protocols/TweakLibraryType.html#/s:8Mixpanel16TweakLibraryTypeP12defaultStoreAA0bF0CvZ":{"name":"defaultStore","abstract":"<p>the default tweak store</p>","parent_name":"TweakLibraryType"},"Protocols/TweakLibraryType.html#/s:8Mixpanel16TweakLibraryTypePAAE6assignqd__AA0B0Vyqd__GAA09TweakableD0Rd__lFZ":{"name":"assign(_:)","abstract":"<p>Returns the current value for a tweak from the TweakLibrary&rsquo;s default store.</p>","parent_name":"TweakLibraryType"},"Protocols/TweakLibraryType.html#/s:8Mixpanel16TweakLibraryTypePAAE4bindyAA0B0Vyqd__G_yqd__c7bindingtAA09TweakableD0Rd__lFZ":{"name":"bind(_:binding:)","abstract":"<p>Immediately binds the currentValue of a given tweak, and then continues to update whenever the tweak changes.</p>","parent_name":"TweakLibraryType"},"Protocols/MixpanelType.html#/s:8Mixpanel0A4TypeP013isValidNestedB0SbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"MixpanelType"},"Protocols/TweakableType.html#/s:8Mixpanel13TweakableTypeP013tweakViewDataC0AA05TweakefC0OvZ":{"name":"tweakViewDataType","abstract":"<p>The data type of the TweakableType</p>","parent_name":"TweakableType"},"Protocols/TweakClusterType.html#/s:8Mixpanel16TweakClusterTypeP05tweakC0SayAA03AnyB0VGv":{"name":"tweakCluster","abstract":"<p>The tweak cluster to allow easy initialization of Tweaks</p>","parent_name":"TweakClusterType"},"Protocols/MixpanelDelegate.html#/s:8Mixpanel0A8DelegateP17mixpanelWillFlushSbAA0A8InstanceCF":{"name":"mixpanelWillFlush(_:)","abstract":"<p>Asks the delegate if data should be uploaded to the server.</p>","parent_name":"MixpanelDelegate"},"Protocols/MixpanelDelegate.html":{"name":"MixpanelDelegate","abstract":"<p>Delegate protocol for controlling the Mixpanel API&rsquo;s network behavior.</p>"},"Protocols/TweakClusterType.html":{"name":"TweakClusterType","abstract":"<p>This protocol allows for easy initialization of TweakStore."},"Protocols/TweakableType.html":{"name":"TweakableType","abstract":"<p>To add a new <T> to our Tweak<T>, make T conform to this protocol.</p>"},"Protocols/MixpanelType.html":{"name":"MixpanelType","abstract":"<p>Property keys must be String objects and the supported value types need to conform to MixpanelType."},"Protocols/TweakLibraryType.html":{"name":"TweakLibraryType","abstract":"<p>Create a public struct in your application that conforms to this protocol to declare your own tweaks!</p>"},"Functions/==(_:_:).html#/s:8Mixpanel2eeoiSbAA5TweakVyxG_AEtAA13TweakableTypeRzlF1TL_xmfp":{"name":"T","parent_name":"==(_:_:)"},"Functions/==(_:_:).html":{"name":"==(_:_:)","abstract":"<p>Comparator between two tweaks for A/B Testing.</p>"},"Functions.html#/s:8Mixpanel2eeoiSbAA8AnyTweakV_ADtF":{"name":"==(_:_:)","abstract":"<p>Comparator between two tweaks for A/B Testing.</p>"},"Extensions/UIColor.html#/c:@CM@Mixpanel@@objc(cs)UIColor(im)initWithMPHex:":{"name":"init(MPHex:)","abstract":"<p>The shorthand four-digit hexadecimal representation of color with alpha.</p>","parent_name":"UIColor"},"Extensions/Dictionary.html#/s:s10DictionaryV8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"Dictionary"},"Extensions/Array.html#/s:Sa8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.</p>","parent_name":"Array"},"Extensions/NSNull.html#/c:@CM@Mixpanel@@objc(cs)NSNull(im)isValidNestedType":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"NSNull"},"Extensions/URL.html#/s:10Foundation3URLV8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"URL"},"Extensions/Date.html#/s:10Foundation4DateV8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Date"},"Extensions/Float.html#/s:Sf8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Float"},"Extensions/UInt.html#/s:Su8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"UInt"},"Extensions/String.html#/s:SS8MixpanelE17tweakViewDataTypeAA05TweakcdE0OvZ":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the string type</p>","parent_name":"String"},"Extensions/String.html#/s:SS8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"String"},"Extensions/Double.html#/s:Sd8MixpanelE17tweakViewDataTypeAA05TweakcdE0OvZ":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the double type</p>","parent_name":"Double"},"Extensions/Double.html#/s:Sd8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Double"},"Extensions/CGFloat.html#/s:12CoreGraphics7CGFloatV8MixpanelE17tweakViewDataTypeAD05TweakfgH0OvZ":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the cgFloat type</p>","parent_name":"CGFloat"},"Extensions/Int.html#/s:Si8MixpanelE17tweakViewDataTypeAA05TweakcdE0OvZ":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the integer type</p>","parent_name":"Int"},"Extensions/Int.html#/s:Si8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Int"},"Extensions/Bool.html#/s:Sb8MixpanelE17tweakViewDataTypeAA05TweakcdE0OvZ":{"name":"tweakViewDataType","abstract":"<p>TweakableType supports the boolean type</p>","parent_name":"Bool"},"Extensions/Bool.html#/s:Sb8MixpanelE17isValidNestedTypeSbyF":{"name":"isValidNestedType()","abstract":"<p>Checks if this object has nested object types that Mixpanel supports.","parent_name":"Bool"},"Extensions/Bool.html":{"name":"Bool"},"Extensions/Int.html":{"name":"Int"},"Extensions/CGFloat.html":{"name":"CGFloat"},"Extensions/Double.html":{"name":"Double"},"Extensions/String.html":{"name":"String"},"Extensions/UInt.html":{"name":"UInt"},"Extensions/Float.html":{"name":"Float"},"Extensions/Date.html":{"name":"Date"},"Extensions/URL.html":{"name":"URL"},"Extensions/NSNull.html":{"name":"NSNull"},"Extensions/Array.html":{"name":"Array"},"Extensions/Dictionary.html":{"name":"Dictionary"},"Extensions/UIColor.html":{"name":"UIColor"},"Enums/TweakViewDataType.html#/s:8Mixpanel17TweakViewDataTypeO7booleanA2CmF":{"name":"boolean","abstract":"<p>TweakableType supports the boolean type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:8Mixpanel17TweakViewDataTypeO7integerA2CmF":{"name":"integer","abstract":"<p>TweakableType supports the integer type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:8Mixpanel17TweakViewDataTypeO7cgFloatA2CmF":{"name":"cgFloat","abstract":"<p>TweakableType supports the cgFloat type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:8Mixpanel17TweakViewDataTypeO6doubleA2CmF":{"name":"double","abstract":"<p>TweakableType supports the double type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html#/s:8Mixpanel17TweakViewDataTypeO6stringA2CmF":{"name":"string","abstract":"<p>TweakableType supports the string type</p>","parent_name":"TweakViewDataType"},"Enums/TweakViewDataType.html":{"name":"TweakViewDataType","abstract":"<p>The data types that are currently supported for SwiftTweaks."},"Classes/Mixpanel.html#/s:8MixpanelAAC10initializeAA0A8InstanceCSS5token_s10DictionaryVySC29UIApplicationLaunchOptionsKeyVypGSg06launchH0Sd13flushIntervalSS12instanceNametFZ":{"name":"initialize(token:launchOptions:flushInterval:instanceName:)","abstract":"<p>Initializes an instance of the API with the given project token.</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/initialize(token:flushInterval:instanceName:)":{"name":"initialize(token:flushInterval:instanceName:)","abstract":"<p>Initializes an instance of the API with the given project token (MAC OS ONLY).</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/s:8MixpanelAAC11getInstanceAA0aC0CSgSS4name_tFZ":{"name":"getInstance(name:)","abstract":"<p>Gets the mixpanel instance with the given name</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/s:8MixpanelAAC12mainInstanceAA0aC0CyFZ":{"name":"mainInstance()","abstract":"<p>Returns the main instance that was initialized.</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/s:8MixpanelAAC15setMainInstanceySS4name_tFZ":{"name":"setMainInstance(name:)","abstract":"<p>Sets the main instance based on the instance name</p>","parent_name":"Mixpanel"},"Classes/Mixpanel.html#/s:8MixpanelAAC14removeInstanceySS4name_tFZ":{"name":"removeInstance(name:)","abstract":"<p>Removes an unneeded Mixpanel instance based on its name</p>","parent_name":"Mixpanel"},"Classes/People.html#/s:8Mixpanel6PeopleC10ignoreTimeSbv":{"name":"ignoreTime","abstract":"<p>controls the $ignore_time property in any subsequent MixpanelPeople operation.","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC18addPushDeviceTokeny10Foundation4DataVF":{"name":"addPushDeviceToken(_:)","abstract":"<p>Register the given device to receive push notifications.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC21removePushDeviceTokeny10Foundation4DataVF":{"name":"removePushDeviceToken(_:)","abstract":"<p>Unregister a specific device token from the ability to receive push notifications.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC3setys10DictionaryVySSAA0A4Type_pG10properties_tF":{"name":"set(properties:)","abstract":"<p>Set properties on the current user in Mixpanel People.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC3setySS8property_AA0A4Type_p2totF":{"name":"set(property:to:)","abstract":"<p>Convenience method for setting a single property in Mixpanel People.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC7setOnceys10DictionaryVySSAA0A4Type_pG10properties_tF":{"name":"setOnce(properties:)","abstract":"<p>Set properties on the current user in Mixpanel People, but doesn&rsquo;t overwrite if","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC5unsetySaySSG10properties_tF":{"name":"unset(properties:)","abstract":"<p>Remove a list of properties and their values from the current user&rsquo;s profile","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC9incrementys10DictionaryVySSAA0A4Type_pG10properties_tF":{"name":"increment(properties:)","abstract":"<p>Increment the given numeric properties by the given values.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC9incrementySS8property_Sd2bytF":{"name":"increment(property:by:)","abstract":"<p>Convenience method for incrementing a single numeric property by the specified","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC6appendys10DictionaryVySSAA0A4Type_pG10properties_tF":{"name":"append(properties:)","abstract":"<p>Append values to list properties.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC6removeys10DictionaryVySSAA0A4Type_pG10properties_tF":{"name":"remove(properties:)","abstract":"<p>Removes list properties.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC5unionys10DictionaryVySSAA0A4Type_pG10properties_tF":{"name":"union(properties:)","abstract":"<p>Union list properties.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC11trackChargeySd6amount_s10DictionaryVySSAA0A4Type_pGSg10propertiestF":{"name":"trackCharge(amount:properties:)","abstract":"<p>Track money spent by the current user for revenue analytics and associate","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC12clearChargesyyF":{"name":"clearCharges()","abstract":"<p>Delete current user&rsquo;s revenue history.</p>","parent_name":"People"},"Classes/People.html#/s:8Mixpanel6PeopleC10deleteUseryyF":{"name":"deleteUser()","abstract":"<p>Delete current user&rsquo;s record from Mixpanel People.</p>","parent_name":"People"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC8delegateAA0A8Delegate_pSgv":{"name":"delegate","abstract":"<p>The a MixpanelDelegate object that gives control over Mixpanel network activity.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC10distinctIdSSv":{"name":"distinctId","abstract":"<p>distinctId string that uniquely identifies the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC5aliasSSSgv":{"name":"alias","abstract":"<p>alias string that uniquely identifies the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC6peopleSQyAA6PeopleCGv":{"name":"people","abstract":"<p>Accessor to the Mixpanel People API object.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC28showNetworkActivityIndicatorSbv":{"name":"showNetworkActivityIndicator","abstract":"<p>Controls whether to show spinning network activity indicator when flushing","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC13flushIntervalSdv":{"name":"flushInterval","abstract":"<p>Flush timer&rsquo;s interval.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC17flushOnBackgroundSbv":{"name":"flushOnBackground","abstract":"<p>Control whether the library should flush data to Mixpanel when the app","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC26useIPAddressForGeoLocationSbv":{"name":"useIPAddressForGeoLocation","abstract":"<p>Controls whether to automatically send the client IP Address as part of","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC9serverURLSSv":{"name":"serverURL","abstract":"<p>The base URL used for Mixpanel API requests.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:s28CustomDebugStringConvertibleP16debugDescriptionSSv":{"name":"debugDescription","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC14loggingEnabledSbv":{"name":"loggingEnabled","abstract":"<p>This allows enabling or disabling of all Mixpanel logs at run time.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC4nameSSv":{"name":"name","abstract":"<p>A unique identifier for this MixpanelInstance</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC29enableVisualEditorForCodelessSbv":{"name":"enableVisualEditorForCodeless","abstract":"<p>Controls whether to enable the visual editor for codeless on mixpanel.com","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC24checkForVariantsOnActiveSbv":{"name":"checkForVariantsOnActive","abstract":"<p>Controls whether to automatically check for A/B test variants for the","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC28checkForNotificationOnActiveSbv":{"name":"checkForNotificationOnActive","abstract":"<p>Controls whether to automatically check for notifications for the","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC24showNotificationOnActiveSbv":{"name":"showNotificationOnActive","abstract":"<p>Controls whether to automatically check for and show in-app notifications","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC32miniNotificationPresentationTimeSdv":{"name":"miniNotificationPresentationTime","abstract":"<p>Determines the time, in seconds, that a mini notification will remain on","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC22minimumSessionDurations6UInt64Vv":{"name":"minimumSessionDuration","abstract":"<p>The minimum session duration (ms) that is tracked in automatic events.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC22maximumSessionDurations6UInt64Vv":{"name":"maximumSessionDuration","abstract":"<p>The maximum session duration (ms) that is tracked in automatic events.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC8identifyySS10distinctId_Sb9usePeopletF":{"name":"identify(distinctId:usePeople:)","abstract":"<p>Sets the distinct ID of the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC11createAliasySS_SS10distinctIdtF":{"name":"createAlias(_:distinctId:)","abstract":"<p>Creates a distinctId alias from alias to the current id.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC5resetyyF":{"name":"reset()","abstract":"<p>Clears all stored properties including the distinct Id.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC7archiveyyF":{"name":"archive()","abstract":"<p>Writes current project info including the distinct Id, super properties,","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/archive()":{"name":"archive()","abstract":"<p>Writes current project info including the distinct Id, super properties,","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC5flushyyycSg10completion_tF":{"name":"flush(completion:)","abstract":"<p>Uploads queued data to the Mixpanel server.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC5trackySSSg5event_s10DictionaryVySSAA0A4Type_pGSg10propertiestF":{"name":"track(event:properties:)","abstract":"<p>Tracks an event with properties.","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC4timeySS5event_tF":{"name":"time(event:)","abstract":"<p>Starts a timer that will be stopped and added as a property when a","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC16eventElapsedTimeSdSS0C0_tF":{"name":"eventElapsedTime(event:)","abstract":"<p>Retrieves the time elapsed for the named event since time(event:) was called.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC16clearTimedEventsyyF":{"name":"clearTimedEvents()","abstract":"<p>Clears all current event timers.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC22currentSuperPropertiess10DictionaryVySSypGyF":{"name":"currentSuperProperties()","abstract":"<p>Returns the currently set super properties.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC20clearSuperPropertiesyyF":{"name":"clearSuperProperties()","abstract":"<p>Clears all currently set super properties.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC23registerSuperPropertiesys10DictionaryVySSAA0A4Type_pGF":{"name":"registerSuperProperties(_:)","abstract":"<p>Registers super properties, overwriting ones that have already been set.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC27registerSuperPropertiesOnceys10DictionaryVySSAA0A4Type_pG_AaG_pSg12defaultValuetF":{"name":"registerSuperPropertiesOnce(_:defaultValue:)","abstract":"<p>Registers super properties without overwriting ones that have already been set,","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC23unregisterSuperPropertyySSF":{"name":"unregisterSuperProperty(_:)","abstract":"<p>Removes a previously registered super property.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC15joinExperimentsyyycSg8callback_tF":{"name":"joinExperiments(callback:)","abstract":"<p>Join any experiments (A/B tests) that are available for the current user.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC16showNotificationyyF":{"name":"showNotification()","abstract":"<p>Shows a notification if one is available.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC16showNotificationySS4type_tF":{"name":"showNotification(type:)","abstract":"<p>Shows a notification with the given type if one is available.</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC16showNotificationySi2ID_tF":{"name":"showNotification(ID:)","abstract":"<p>Shows a notification with the given ID</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html#/s:8Mixpanel0A8InstanceC24fetchNotificationPayloadyys10DictionaryVySSyXlGSgc10completion_tF":{"name":"fetchNotificationPayload(completion:)","abstract":"<p>Returns the payload of a notification if available</p>","parent_name":"MixpanelInstance"},"Classes/MixpanelInstance.html":{"name":"MixpanelInstance","abstract":"<p>The class that represents the Mixpanel Instance</p>"},"Classes/People.html":{"name":"People","abstract":"<p>Access to the Mixpanel People API, available as an accessible variable from"},"Classes.html#/s:8Mixpanel10TweakStoreC":{"name":"TweakStore","abstract":"<p>Looks up the persisted state for tweaks.</p>"},"Classes/Mixpanel.html":{"name":"Mixpanel","abstract":"<p>The primary class for integrating Mixpanel with your app.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"}}